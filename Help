═══════════════════════════════════════════════════════════════════════
ОБЗОР ПРОЕКТА — УМНЫЙ ЭЛЕКТРОЧАЙНИК НА ATTINY44A
═══════════════════════════════════════════════════════════════════════
КРАТКО
------
Назначение: 
  Измерять температуру воды (NTC термистор), управлять нагревом через 
  реле 5V с коммутацией 220V, индицировать состояние RGB LED и 4 LED 
  индикаторами, подавать звуковые сигналы через буззер.
Платформа: 
  ATtiny44A (DIP-14), тактовая частота 8 MHz (внутренний RC-генератор)
Среды разработки:
  - Microchip Studio (с AVR-GCC)
  - Arduino IDE (с поддержкой ATtiny)
═══════════════════════════════════════════════════════════════════════
БЫСТРЫЕ ФАКТЫ (ВХОДЫ / ВЫХОДЫ)
═══════════════════════════════════════════════════════════════════════
ВХОДЫ:
+ • KEY1 (кнопка 1)  → PB3 (pin 4, через мост 1-2) ← ИСПРАВЛЕНО!
+ • KEY2 (кнопка 2)  → PA2 (pin 11, через мост 3-4)
  • NTC термистор    → PA1 (ADC1, pin 12)
НЕ ИСПОЛЬЗУЕТСЯ:
+ • PA0 (pin 13)     → RESET (для ISP программирования) ← ВАЖНО!
+ • PB0 (pin 2)      → NC (не подключен)
ВЫХОДЫ:
  • RELAY            → PA4 (pin 9, через 2N7002 MOSFET)
  • RGB LED красный  → PB2 (pin 5, PWM OCR0A)
  • RGB LED зелёный  → PA7 (pin 6, PWM OCR0B)
  • RGB LED синий    → PA6 (pin 7, PWM OCR1A)
  • LED индикаторы   → Мостовая схема (A_1_2=PB3, A_3_4=PA2, C_1_3=PA3, C_2_4=PB1)
  • BUZZER           → PA5 (pin 8, через MMBT2222A NPN)
СИСТЕМНЫЕ ПИНЫ:
  • RESET            → PA0 (pin 13, для ISP программирования)
  • VCC              → Pin 1 (+5V)
  • GND              → Pin 14
ПАМЯТЬ:
  • EEPROM адрес 0x00: последний выбранный режим температуры (1-5)
  • EEPROM адрес 0x01: последний режим подсветки/эффектов (1-20)
═══════════════════════════════════════════════════════════════════════
РЕЖИМЫ РАБОТЫ
═══════════════════════════════════════════════════════════════════════
ПРЕДУСТАНОВЛЕННЫЕ ТЕМПЕРАТУРЫ (°C * 100):
  Режим 1: 4000 (40°C)  → LED1 ●     → 🔵 Голубой
  Режим 2: 6000 (60°C)  → LED2 ●     → 🟢 Зелёный
  Режим 3: 7000 (70°C)  → LED3 ●     → 🟡 Жёлто-зелёный
  Режим 4: 8000 (80°C)  → LED4 ●     → 🟠 Оранжевый
  Режим 5: 9000 (90°C)  → LED3+LED4  → 🔴 Оранжево-красный
СПЕЦИАЛЬНЫЕ РЕЖИМЫ:
+ • Режим 99: Неполное кипячение (время кипячения ×0.25)
+ • Режим 100: Полное кипячение (стандартное время)
ЭФФЕКТЫ ПОДСВЕТКИ RGB:
  Эффекты 1-4:   Простая смена цветов
  Эффекты 5-12:  Плавное затухание
  Эффекты 13-20: Дыхание по температуре
  По умолчанию:  Цвет по температуре (динамический)
  Автоотключение: через 20 минут бездействия
═══════════════════════════════════════════════════════════════════════
БЕЗОПАСНОСТЬ И КОНТРОЛЬ
═══════════════════════════════════════════════════════════════════════
WATCHDOG TIMER:
  • WDT включён: WDTO_8S (таймаут 8 секунд)
  • Сброс в главном цикле каждые 20мс: wdt_reset()
  • Автоматическая перезагрузка при зависании
ЗАЩИТНЫЕ ПОРОГИ (°C * 100):
  • TEMP_CRITICAL:      10300 (103°C)  → Аварийное отключение
  • TEMP_MIN:           715 (7.15°C)   → Обрыв датчика/пустой чайник
  • TEMP_BOIL:          9500 (95°C)    → Начало отсчёта кипячения
ТАЙМАУТЫ БЕЗОПАСНОСТИ (миллисекунды):
  • NO_CHANGE_TIMEOUT:  262144 мс (~4.4 мин)
    ↳ Если температура не растёт → аварийное отключение
  • ENABLED_TIMEOUT:    2097152 мс (~35 мин)
    ↳ Максимальное время нагрева → аварийное отключение
+ • EFFECT_TIMEOUT:      1200000 мс (20 мин)
+   ↳ Автоматическое отключение режима просмотра эффектов
КОНТРОЛЬ СКОРОСТИ НАГРЕВА:
  • diffMode: DIFF_OFF → DIFF_START → DIFF_CALC
  • Адаптивная корректировка diffOffset для точного выключения
  • Расчёт скорости нагрева для прогнозирования времени кипения
+ • Защита от сухого кипячения: скорость >5°C/сек → авария
═══════════════════════════════════════════════════════════════════════
ИНДИКАЦИЯ И ЗВУК
═══════════════════════════════════════════════════════════════════════
RGB LED (ОБЩИЙ АНОД, ИНВЕРСНАЯ ЛОГИКА):
  • Аппаратный PWM: Timer0 (OCR0A, OCR0B), Timer1 (OCR1A)
  • Инверсия в коде: analogWritePin(&LED_R, 255 - r)
  • 255 на PWM → LED выключен, 0 → максимальная яркость
  • HSV→RGB преобразование для плавных эффектов
LED ИНДИКАТОРЫ (МОСТОВАЯ СХЕМА 2x2):
  • 4 LED управляются через 2 моста (делители напряжения)
  • Матричное мультиплексирование для отображения режимов
  • Резисторы по 470Ω в каждом мосту
  Режим 5: зажигает LED3 + LED4 одновременно (нижний ряд)
BUZZER (ПАССИВНЫЙ, ИНВЕРСНАЯ ЛОГИКА):
  • Управление через NPN транзистор MMBT2222A
  • HIGH на PA5 → буззер ВЫКЛЮЧЕН (транзистор закрыт)
  • LOW на PA5 → буззер включен
+ • 30-секундный звуковой сигнал по завершению:
+   10 сек → звук, 10 сек → тишина, 10 сек → звук
+ • Звук при нажатии кнопок (30 мс писк)
═══════════════════════════════════════════════════════════════════════
УПРАВЛЕНИЕ (UX)
═══════════════════════════════════════════════════════════════════════
КНОПКА KEY1 (PB3, pin 4):
+ Короткое нажатие:
+   • В режиме ожидания: запуск кипячения (режим 100)
+ Длительное нажатие (1 сек):
+   • Во время кипячения: переключение 100 ↔ 99 (полное/неполное)
КНОПКА KEY2 (PA2, pin 11):
+ Короткое нажатие:
+   • Переключение режимов температуры (1→2→3→4→5→1)
+   • Показ текущего режима через LED индикаторы
+ Нажатие 1 секунда:
+   • Показ текущей температуры через LED индикаторы
+ Нажатие 3 секунды:
+   • Вход в режим эффектов подсветки (эффект 1)
+   • Переключение эффектов (1→2→...→20→1)
+ Очень длительное нажатие (12 сек):
+   • Сохранение текущего режима/эффекта в EEPROM
ТАЙМЕР АВТОСТАРТА:
  • После выбора режима: 12 секунд на подтверждение
  • Если температура ниже целевой → автоматический старт нагрева
  • Иначе → отмена
═══════════════════════════════════════════════════════════════════════
ЧТЕНИЕ КНОПОК В КОДЕ
═══════════════════════════════════════════════════════════════════════
МОСТОВАЯ СХЕМА С АЦП:
  В коде main.c:
+ uint8_t nPress = 0;
+ if(!(PINB & _BV(3))) nPress = 1;      // PB3 → KEY1 ✅
+ else if(!(PINA & _BV(2))) nPress = 2; // PA2 → KEY2 ✅
ПРИНЦИП:
  • В покое: делитель 470Ω-470Ω → ~512 АЦП (2.5V)
  • При нажатии: шунтируется первый резистор → ~682 АЦП (3.33V)
  • МК определяет изменение АЦП для детекта нажатия
═══════════════════════════════════════════════════════════════════════
КОРОТКИЕ ИНСТРУКЦИИ ДЛЯ РАЗРАБОТЧИКА
═══════════════════════════════════════════════════════════════════════
КОМПИЛЯЦИЯ:
Microchip Studio:
  1. Project Properties → Toolchain → Symbols
  2. Добавить: F_CPU=8000000UL
  3. Optimization: -Os (optimize for size)
  4. Build → Rebuild Solution
УСТАНОВКА ФЬЮЗОВ (РЕКОМЕНДУЕТСЯ):
  avrdude -c usbasp -p t44 -U lfuse:w:0xE2:m -U hfuse:w:0xDD:m -U efuse:w:0xFF:m
ПРОШИВКА:
1. Подключить USBasp к ISP разъёму J3
2. Установить фьюзы (один раз)
3. Прошить firmware:
   avrdude -c usbasp -p t44 -U flash:w:main.hex:i
⚠️ ВАЖНО: При программировании временно отключите:
+ - LED_R (PB2 используется как SCK)
+ - BUZZER (PA5 используется как MOSI)
+ - LED_B (PA6 используется как MISO)
КАЛИБРОВКА NTC:
1. Измерить реальную температуру воды термометром
2. Считать значение АЦП через индикацию LED
3. Подобрать коэффициенты в формуле getTemp()
4. Проверить в диапазоне 20-100°C
ДЕБАГ:
Без UART можно использовать:
1. RGB LED для индикации состояний
2. LED индикаторы для показа значений
3. Buzzer для звуковых кодов ошибок
═══════════════════════════════════════════════════════════════════════
СТРУКТУРА ФАЙЛОВ ПРОЕКТА
═══════════════════════════════════════════════════════════════════════
microcipstudio_key переименовать в main.c        - Исходный код для Microchip Studio
arduinoIDE_key                                   - Исходный скетч для Arduino IDE(функционал уменьшен)
Kettle_Controller_Netlist.txt                    - Список соединений для PCB
kettle_schematic.html                            - Визуальная схема подключения
Cheklist.txt                                     - Чек-лист настроек и фьюзов
Help.txt                                         - Этот файл (документация проекта)
═══════════════════════════════════════════════════════════════════════
КОНТАКТЫ И ПОДДЕРЖКА
═══════════════════════════════════════════════════════════════════════
Дата обновления: 2025
Платформа: ATtiny44A @ 8MHz
⚠️ ВНИМАНИЕ: Реле коммутирует 220V AC - соблюдайте технику безопасности!
Изолируйте все высоковольтные контакты. Работу с 220V доверяйте только 
квалифицированным специалистам.
